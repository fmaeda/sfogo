{"version":3,"sources":["store/user/types.ts","store/product/index.ts","store/user/reducers.ts","store/index.ts","store/configureStore.ts","styles/index.ts","routes/MapRoute/styled.ts","components/FireIcon/index.tsx","components/FireButton/styled.ts","components/FireButton/index.tsx","resources/svg/sisfogo.svg","components/SearchBox/styled.ts","components/SearchBox/index.tsx","routes/MapRoute/index.tsx","routes/HomeRoute/styled.ts","components/StyledButton/styled.ts","components/StyledButton/index.tsx","routes/HomeRoute/index.tsx","components/ItemList/styled.ts","components/ItemList/index.tsx","components/ProductList/index.tsx","routes/ProductsRoute/styled.ts","routes/ProductsRoute/index.tsx","routes/index.tsx","resources/svg/bg-pattern.svg","App/styled.ts","App/index.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","ProductReducer","product","this","draftState","products","push","filter","p","id","ImmerReducer","ProductActions","createActionCreators","productReducer","createReducerFunction","ProductAsyncActions","fetchProducts","dispatch","axios","get","then","data","setProducts","DEFAULT_STATE","login","name","allReducers","user","state","action","produce","draft","type","SET_LOGIN","payload","SET_NAME","rootReducer","persistReducer","key","storage","sessionStorage","blacklist","combineReducers","middlewares","thunk","theme","color","primary","secondary","red","green","blue","darkBlue","darkGray","lightSilver","darkSilver","silver","error","translucentWhite","translucentBlack","size","font","normal","big","icon","Container","styled","div","Content","drawerOpen","MapContainer","TopBar","span","Header","MenuContainer","SideBar","FabContainer","Logo","img","BlurryPanel","ActionButtons","SearchContainer","Outline","AiFillFire","Fire","FireIcon","React","Component","Glass","PlusContainer","FireButton","InputContainer","Input","input","ResultsContainer","SearchBox","value","results","resultsVisible","handleSearch","query","qs","stringify","q","polygon_geojson","countrycodes","limit","format","addressdetails","setState","handleChange","evt","target","handleResultSelect","result","onSelect","props","onChange","onFocus","onClick","length","map","r","display_name","MapRoute","viewport","longitude","latitude","zoom","bearing","pitch","mapRef","createRef","getCurrentLocation","a","navigator","Promise","resolve","reject","geolocation","getCurrentPosition","handleViewportChange","toggleDrawer","rest","handleCurrentLocationClick","coords","flyTo","lat","lon","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","fitBounds","bbox","WebMercatorViewport","console","log","boundingbox","Number","x","y","min","max","src","sisfogoLogo","width","height","ref","onViewportChange","mapStyle","version","sources","osm","tiles","tileSize","attribution","layers","source","minzoom","maxzoom","label","history","StyledButton","Item","ItemList","items","renderItem","children","renderedItems","i","ProductList","item","connect","createHashHistory","hashType","MainRoute","path","component","HomeRoute","ProductsRoute","background","App","Boolean","window","location","hostname","match","AppComponent","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf53e427.chunk.js","sourcesContent":["export enum ActionTypes {\n  SET_LOGIN = '@@user/SET_LOGIN',\n  SET_NAME = '@@user/SET_NAME',\n}\n\nexport type State = {\n  readonly login: string;\n  readonly name: string;\n};\n","import {\n  ImmerReducer,\n  createActionCreators,\n  createReducerFunction,\n} from 'immer-reducer';\nimport { AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport axios from 'axios';\nimport { RootState } from 'store';\n\nimport { Product } from 'model/product';\n\ntype State = {\n  products: Product[];\n};\n\nclass ProductReducer extends ImmerReducer<State> {\n  public addProduct(product: Product) {\n    this.draftState.products.push(product);\n  }\n\n  public removeProduct(product: Product) {\n    this.draftState.products = this.draftState.products.filter(\n      p => p.id !== product.id,\n    );\n  }\n\n  public setProducts(products: Product[]) {\n    this.draftState.products = products;\n  }\n}\n\nconst DEFAULT_STATE: State = {\n  products: [],\n};\n\nexport const ProductActions = createActionCreators(ProductReducer);\nexport const productReducer = createReducerFunction(\n  ProductReducer,\n  DEFAULT_STATE,\n);\n\nexport const ProductAsyncActions = {\n  fetchProducts: (): ThunkAction<Promise<void>, RootState, null, AnyAction> => (\n    dispatch,\n    // getState,\n  ): Promise<void> => {\n    return axios.get('/ibama/api/products').then(({ data }) => {\n      dispatch(ProductActions.setProducts(data));\n    });\n  },\n};\n","import produce from 'immer';\nimport { Reducer } from 'redux';\n\nimport { Action } from './actions';\nimport { ActionTypes, State } from './types';\n\nconst DEFAULT_STATE: State = {\n  login: '',\n  name: '',\n};\n\nconst reducer: Reducer<State, Action> = (state = DEFAULT_STATE, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case ActionTypes.SET_LOGIN: {\n        draft.login = action.payload.login;\n        break;\n      }\n      case ActionTypes.SET_NAME: {\n        draft.name = action.payload.name;\n        break;\n      }\n    }\n  });\n\nexport { reducer as userReducer };\n","import { StateType } from 'typesafe-actions';\n\nimport { productReducer } from 'store/product';\nimport { userReducer } from 'store/user/reducers';\n\nconst allReducers = {\n  product: productReducer,\n  user: userReducer,\n};\n\nexport type RootState = StateType<typeof allReducers>;\n\nexport default allReducers;\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  combineReducers,\n  createStore,\n  Store,\n  Reducer,\n  applyMiddleware,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport sessionStorage from 'redux-persist/lib/storage/session';\n\nimport allReducers, { RootState } from 'store';\n\nconst rootReducer = (persistReducer(\n  {\n    key: 'ibama',\n    storage: sessionStorage,\n    blacklist: ['layer'],\n  },\n  combineReducers({ ...allReducers }),\n) as unknown) as Reducer<RootState>;\n\nconst middlewares = [thunk];\n\nexport default () => {\n  const store: Store<RootState> = createStore<RootState, any, any, any>(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middlewares)),\n  );\n\n  const persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n  };\n};\n","import styled, { CreateStyled } from '@emotion/styled/macro';\ntype Theme = {\n  name: string;\n  color: {\n    primary: string;\n    secondary: string;\n    red: string;\n    green: string;\n    blue: string;\n    darkBlue: string;\n    darkGray: string;\n    lightSilver: string;\n    darkSilver: string;\n    translucentWhite: string;\n    translucentBlack: string;\n    silver: string;\n    error: string;\n  };\n  size: {\n    font: {\n      normal: string;\n      big: string;\n    };\n    icon: {\n      normal: string;\n      big: string;\n    };\n  };\n};\n\nexport const theme: Theme = {\n  name: 'default',\n  color: {\n    primary: '#2C68BD',\n    secondary: '#e91e63',\n    red: '#A6392F',\n    green: '#0F8C3C',\n    blue: '#1A95C0',\n    darkBlue: '#0F4098',\n    darkGray: '#4A4A4A',\n    lightSilver: '#F7F7F7',\n    darkSilver: '#A0A0A0',\n    silver: '#ededed',\n    error: 'red',\n    translucentWhite: 'rgba(255, 255, 255, 0.5)',\n    translucentBlack: 'rgba(0, 0, 0, 0.5)',\n  },\n  size: {\n    font: {\n      normal: '11px',\n      big: '14px',\n    },\n    icon: {\n      normal: '14px',\n      big: '16px',\n    },\n  },\n};\n\nexport default styled as CreateStyled<Theme>;\n","import styled from 'styles';\n\ntype DrawerProps = {\n  drawerOpen: boolean;\n};\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  position: relative;\n  overflow: hidden;\n  /* background-color: yellow; */\n  /* margin: 60px 12px 0; */\n`;\n\nexport const Content = styled.div<DrawerProps>`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  overflow: hidden;\n  transition: all 0.2s ease-in-out;\n  ${({ drawerOpen }) => `\n    transform: translateX(${drawerOpen ? '60px' : '0px'});\n  `}\n  perspective: 800px;\n`;\n\nexport const MapContainer = styled.div<DrawerProps>`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  transition: all 0.2s ease-in-out;\n  overflow: hidden;\n  /* border: solid lime; */\n  /* border-radius: ${({ drawerOpen }) => (drawerOpen ? '8px' : '0')}; */\n  border-radius: 12px;\n  /* margin: 8px 14px 14px 8px; */\n  margin: 12px;\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.5);\n  /* padding: ${({ drawerOpen }) => (drawerOpen ? '16px' : '12px')}; */\n  background: #363b49;\n\n  > div {\n    width: 100% !important;\n    height: 100% !important;\n    border-radius: 0 0 12px 12px !important;\n    overflow: hidden !important;\n    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.5);\n    /* border: solid red; */\n  }\n  ${({ drawerOpen }) =>\n    drawerOpen &&\n    `\n    transform: scale(0.8) translate(200px, 0px) rotate3d(0, 1, 0, -25deg);\n    box-shadow: -2px -2px 4px rgba(0, 0, 0, 0.2);\n  `};\n`;\n\nexport const TopBar = styled.span`\n  z-index: 2;\n  /* position: absolute;\n  top: -1px;\n  left: -1px;\n  right: -1px; */\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 60px;\n  padding: 0 20px;\n  align-items: center;\n  /* border: solid red; */\n  /* margin: 20px; */\n  /* background: whitesmoke; */\n  /* border-radius: 12px 12px 0 0; */\n  /* background: rgba(0, 0, 0, 0.8); */\n  /* box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); */\n  /* color: #777; */\n  background: rgba(0, 0, 0, 0.1);\n  /* backdrop-filter: blur(3px); */\n  box-shadow: 2px 4px 4px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Header = styled.span`\n  display: flex;\n  flex-direction: row;\n  width: 200px;\n  /* border: solid red; */\n  /* align-items: center; */\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const ButtonBar = styled.div`\n  z-index: 9999;\n  display: flex;\n  flex-direction: row;\n  align-self: stretch;\n  /* background: whitesmoke; */\n  /* border: red solid; */\n  align-items: center;\n  justify-content: space-evenly;\n  height: 60px;\n  filter: drop-shadow(-2px -2px 2px rgba(0, 0, 0, 0.3));\n\n  > svg {\n    color: #444;\n    font-size: 24px;\n  }\n`;\n\nexport const MenuContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n`;\n\nexport const SideBar = styled.div<DrawerProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-width: 60px;\n  transition: all 0.2s ease-in-out;\n\n  box-shadow: inset -4px 0px 2px -2px rgba(0, 0, 0, 0.25);\n  background: rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(3px);\n  /* filter: drop-shadow(-4px 0px 4px rgba(0, 0, 0, 0.3)); */\n  ${({ drawerOpen }) => `\n    transform: translateX(${drawerOpen ? '0' : '-60px'});\n  `}\n\n  > svg {\n    font-size: 28px;\n    margin: 8px;\n    padding: 8px;\n  }\n`;\n\nexport const FabContainer = styled.span`\n  position: absolute;\n  bottom: 40px;\n  right: 50%;\n  transform: translateX(50%);\n  filter: drop-shadow(0px 0px 4px rgba(0, 0, 0, 0.4));\n`;\n\nexport const Logo = styled.img`\n  height: 28px;\n`;\n\nexport const BlurryPanel = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n`;\n\nexport const ActionButtons = styled.span`\n  position: absolute;\n  right: 12px;\n  bottom: 30%;\n  display: flex;\n  flex-direction: column;\n  /* border: solid red; */\n  > svg {\n    border-radius: 100px;\n    padding: 8px;\n    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.5);\n    background: whitesmoke;\n    margin: 8px 4px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const SearchContainer = styled.span`\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n  top: 70px;\n  left: 0;\n  right: 0;\n  /* border: solid red; */\n`;\n","import React from 'react';\nimport { AiFillFire, AiOutlineFire } from 'react-icons/ai';\nimport styled from 'styles';\n\nconst Container = styled.div`\n  position: relative;\n  width: 40px;\n  height: 40px;\n`;\n\nconst Outline = styled(AiFillFire)`\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  color: tomato;\n  font-size: 44px;\n  filter: drop-shadow(0px 2px 1px rgba(0, 0, 0, 0.5));\n`;\n\nconst Fire = styled(AiFillFire)`\n  position: absolute;\n  bottom: 4px;\n  left: 50%;\n  font-size: 28px;\n  color: orange;\n  transform: translateX(-50%);\n`;\n\ntype Props = {};\n\nclass FireIcon extends React.Component<Props> {\n  render(): JSX.Element {\n    return (\n      <Container>\n        <Outline />\n        <Fire />\n      </Container>\n    );\n  }\n}\n\nexport default FireIcon;\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* top: -24px; */\n  border-radius: 1000px;\n  background-image: -webkit-radial-gradient(\n    40% 0,\n    farthest-side ellipse,\n    #596276 10%,\n    #303543\n  );\n  transition: all 0.2s ease-in-out;\n  /* border: solid red; */\n  padding: 12px;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  :active {\n    background-image: -webkit-radial-gradient(\n      40% 0,\n      farthest-side ellipse,\n      #4a5164 10%,\n      #596276\n    );\n  }\n`;\n\nexport const Glass = styled.div`\n  backdrop-filter: blur(3px);\n  padding: 6px;\n  border-radius: 100px;\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);\n`;\n\nexport const PlusContainer = styled.div`\n  position: absolute;\n  font-size: 16px;\n  bottom: 12px;\n  right: 16px;\n  filter: drop-shadow(0px 2px 0px rgba(0, 0, 0, 0.5));\n`;\n","import React from 'react';\nimport FireIcon from 'components/FireIcon';\nimport { FaPlus } from 'react-icons/fa';\n\nimport { Container, Glass, PlusContainer } from './styled';\n\ntype Props = {};\n\nclass FireButton extends React.Component<Props> {\n  render(): JSX.Element {\n    return (\n      <Glass>\n        <Container>\n          <FireIcon />\n          <PlusContainer>\n            <FaPlus />\n          </PlusContainer>\n        </Container>\n      </Glass>\n    );\n  }\n}\n\nexport default FireButton;\n","export default __webpack_public_path__ + \"static/media/sisfogo.5658165b.svg\";","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100px;\n  background: white;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n  > svg {\n    color: rgba(0, 0, 0, 0.5);\n    font-size: 14px;\n    padding: 4px 12px;\n    border-left: 1px solid lightgray;\n  }\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  outline: none;\n  border: none;\n  padding: 8px 16px;\n  background: transparent;\n`;\n\nexport const ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  border-radius: 4px;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n  color: gray;\n  margin: 4px 12px;\n  padding: 4px;\n  > span {\n    margin: 4px 12px;\n    padding: 8px 0;\n    border-bottom: 1px solid gray;\n  }\n`;\n","import React, { ChangeEvent } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport qs from 'qs';\n\nimport { FaSearch } from 'react-icons/fa';\n\nimport { InputContainer, Container, Input, ResultsContainer } from './styled';\n\nexport type Result = {\n  display_name: string;\n  address: {\n    country: string;\n    city?: string;\n    postcode?: string;\n    region?: string;\n    state?: string;\n  };\n  boundingbox: [number, number, number, number];\n  lat: number;\n  lon: number;\n  place_id: number;\n};\n\ntype Props = {\n  onSelect: (result: Result) => void;\n};\n\ntype State = {\n  value: string;\n  resultsVisible: boolean;\n  results: Result[];\n};\n\nclass SearchBox extends React.Component<Props, State> {\n  state: State = {\n    value: '',\n    results: [],\n    resultsVisible: false,\n  };\n\n  handleSearch = (): void => {\n    const { value } = this.state;\n\n    const query = qs.stringify({\n      q: value,\n      polygon_geojson: 0,\n      'accept-language': 'pt-BR',\n      countrycodes: 'br',\n      limit: 5,\n      format: 'jsonv2',\n      addressdetails: 1,\n    });\n    axios\n      .get(`https://nominatim.openstreetmap.org/search?${query}`)\n      .then(({ data: results }: AxiosResponse<Result[]>) => {\n        this.setState({ results, resultsVisible: true });\n      });\n  };\n\n  handleChange = (evt: ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      value: evt.target.value,\n    });\n  };\n\n  handleResultSelect = (result: Result) => (): void => {\n    const { onSelect } = this.props;\n    onSelect(result);\n    this.setState({ resultsVisible: false });\n  };\n\n  render(): JSX.Element {\n    const { value, results, resultsVisible } = this.state;\n    return (\n      <Container>\n        <InputContainer>\n          <Input\n            onChange={this.handleChange}\n            value={value}\n            onFocus={() => this.setState({ resultsVisible: true })}\n          />\n          <FaSearch onClick={this.handleSearch} />\n        </InputContainer>\n        {resultsVisible && results.length > 0 && (\n          <ResultsContainer>\n            {results.map((r) => (\n              <span key={r.display_name} onClick={this.handleResultSelect(r)}>\n                {r.display_name}\n              </span>\n            ))}\n          </ResultsContainer>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default SearchBox;\n","import React from 'react';\nimport ReactMapGL, {\n  FlyToInterpolator,\n  ViewportProps,\n  WebMercatorViewport,\n} from 'react-map-gl';\nimport { FaFireExtinguisher, FaLayerGroup } from 'react-icons/fa';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { MdChevronLeft, MdMyLocation } from 'react-icons/md';\nimport { easeCubic } from 'd3-ease';\n\nimport {\n  TopBar,\n  Logo,\n  BlurryPanel,\n  ActionButtons,\n  SearchContainer,\n  ButtonBar,\n  MenuContainer,\n  Container,\n  Header,\n  MapContainer,\n  Content,\n  SideBar,\n  FabContainer,\n} from './styled';\nimport FireButton from 'components/FireButton';\nimport sisfogoLogo from 'resources/svg/sisfogo.svg';\nimport SearchBox, { Result } from 'components/SearchBox';\n\ntype Props = {};\n\ntype State = {\n  viewport: Partial<ViewportProps>;\n  drawerOpen: boolean;\n};\n\nclass MapRoute extends React.Component<Props, State> {\n  state = {\n    viewport: {\n      longitude: -47.708052,\n      latitude: -15.888663,\n      zoom: 11,\n      bearing: 0,\n      pitch: 0,\n    },\n    drawerOpen: false,\n  };\n\n  mapRef = React.createRef<ReactMapGL>();\n\n  async componentDidMount(): Promise<void> {\n    const {\n      coords: { latitude, longitude },\n    } = await this.getCurrentLocation();\n    return this.setState(({ viewport, ...rest }) => ({\n      ...rest,\n      viewport: {\n        ...viewport,\n        latitude,\n        longitude,\n        zoom: 15,\n      },\n    }));\n  }\n\n  getCurrentLocation = async (): Promise<Position> => {\n    if ('geolocation' in navigator) {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    }\n    return Promise.reject();\n  };\n\n  handleViewportChange = (viewport: ViewportProps): void => {\n    this.setState({\n      viewport,\n    });\n  };\n\n  toggleDrawer = (): void => {\n    this.setState(({ drawerOpen, ...rest }) => ({\n      ...rest,\n      drawerOpen: !drawerOpen,\n    }));\n  };\n\n  handleCurrentLocationClick = async (): Promise<void> => {\n    const {\n      coords: { latitude, longitude },\n    } = await this.getCurrentLocation();\n    this.flyTo(latitude, longitude);\n  };\n\n  flyTo = (lat: number, lon: number): void => {\n    // this.mapRef.current?.getMap().flyTo({\n    //   center: [lon, lat],\n    //   zoom: 15,\n    // });\n    const { viewport } = this.state;\n    this.setState({\n      viewport: {\n        ...viewport,\n        longitude: lon,\n        latitude: lat,\n        zoom: 15,\n        transitionDuration: 2000,\n        transitionInterpolator: new FlyToInterpolator(),\n        transitionEasing: easeCubic,\n      },\n    });\n  };\n\n  fitBounds = (bbox: [[number, number], [number, number]]): void => {\n    const { longitude, latitude, zoom } = new WebMercatorViewport(\n      this.state.viewport,\n    ).fitBounds(bbox, {\n      // padding: 20,\n      // offset: [0, -100],\n    });\n    const { viewport } = this.state;\n    this.setState({\n      viewport: {\n        ...viewport,\n        longitude,\n        latitude,\n        zoom,\n        transitionDuration: 2000,\n        transitionInterpolator: new FlyToInterpolator(),\n        transitionEasing: easeCubic,\n      },\n    });\n  };\n\n  handleResultSelect = (result: Result): void => {\n    // this.flyTo(result.lat, result.lon);\n    console.log('result', result.boundingbox);\n    const [x, y, min, max] = result.boundingbox.map(Number);\n    this.fitBounds([\n      [min, x],\n      [max, y],\n    ]);\n  };\n\n  render(): JSX.Element {\n    const { viewport, drawerOpen } = this.state;\n\n    return (\n      <Container>\n        <MenuContainer>\n          <SideBar drawerOpen={drawerOpen}>\n            <MdChevronLeft onClick={this.toggleDrawer} />\n          </SideBar>\n          <Header>\n            <Logo src={sisfogoLogo} />\n          </Header>\n        </MenuContainer>\n        <Content drawerOpen={drawerOpen}>\n          <MapContainer drawerOpen={drawerOpen}>\n            <TopBar>\n              <GiHamburgerMenu\n                size={20}\n                // color=\"black\"\n                onClick={this.toggleDrawer}\n              />\n              <h3>Registro de Incidente</h3>\n              <GiHamburgerMenu size={20} color=\"transparent\" />\n            </TopBar>\n            <SearchContainer>\n              <SearchBox onSelect={this.handleResultSelect} />\n            </SearchContainer>\n            <ReactMapGL\n              width=\"100%\"\n              height=\"100%\"\n              ref={this.mapRef}\n              {...viewport}\n              onViewportChange={this.handleViewportChange}\n              // onResize={() => this.m apRef.current?.getMap().resize()}\n              // onResize={() => console.log('resize')}\n              mapStyle={{\n                version: 8,\n                sources: {\n                  osm: {\n                    type: 'raster',\n                    tiles: ['https://tile.openstreetmap.org/{z}/{x}/{y}.png'],\n                    tileSize: 256,\n                    attribution:\n                      // eslint-disable-next-line max-len\n                      'Map tiles by <a target=\"_top\" rel=\"noopener\" href=\"https://tile.openstreetmap.org/\">OpenStreetMap tile servers</a>, under the <a target=\"_top\" rel=\"noopener\" href=\"https://operations.osmfoundation.org/policies/tiles/\">tile usage policy</a>. Data by <a target=\"_top\" rel=\"noopener\" href=\"http://openstreetmap.org\">OpenStreetMap</a>',\n                  },\n                },\n                layers: [\n                  {\n                    id: 'osm',\n                    type: 'raster',\n                    source: 'osm',\n                    minzoom: 0,\n                    maxzoom: 22,\n                  },\n                ],\n              }}\n            ></ReactMapGL>\n            <ActionButtons>\n              <FaLayerGroup size={20} />\n              <MdMyLocation\n                size={20}\n                onClick={this.handleCurrentLocationClick}\n              />\n            </ActionButtons>\n            <FabContainer>\n              <FireButton />\n            </FabContainer>\n            {drawerOpen && (\n              <BlurryPanel\n                onClick={() => this.setState({ drawerOpen: false })}\n              />\n            )}\n          </MapContainer>\n          {/* <ButtonBar>\n            <FaFireExtinguisher />\n            <FaFireExtinguisher />\n            <FireButton />\n            <FaFireExtinguisher />\n            <FaFireExtinguisher />\n          </ButtonBar> */}\n        </Content>\n      </Container>\n    );\n  }\n}\n\nexport default MapRoute;\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-evenly;\n  flex-direction: column;\n\n  background: #ffaa00;\n`;\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n  border: solid blue 1px;\n  border-radius: 4px;\n  background: tomato;\n\n  transition: all 0.4s ease-in-out;\n\n  :hover {\n    cursor: pointer;\n    background: lime;\n    /* padding: 50px; */\n  }\n`;\n","import React from 'react';\nimport { Container } from './styled';\n\ntype Props = {\n  onClick: () => void;\n  label?: string;\n};\n\nexport default ({ onClick, label = '' }: Props) => (\n  <Container onClick={onClick}>{label}</Container>\n);\n","import React from 'react';\n\nimport { Container } from './styled';\nimport { RouteComponentProps } from 'react-router';\n\nimport StyledButton from 'components/StyledButton';\n\ntype Props = {} & RouteComponentProps;\n\nexport default ({ history }: Props) => (\n  <Container>\n    <StyledButton onClick={() => history.push('/products')} label=\"Products\" />\n  </Container>\n);\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n","import React from 'react';\n\nimport { Container, Item } from './styled';\n\ntype Props<T> = {\n  items: T[];\n  renderItem?: (item: T) => React.ReactNode;\n  children?: (items: React.ReactNode) => React.ReactNode;\n};\n\nclass ItemList<T> extends React.Component<Props<T & { id: string }>> {\n  render() {\n    const { items, renderItem, children } = this.props;\n    const renderedItems = items.map(i => (\n      <Item key={i.id}>{renderItem ? renderItem(i) : i}</Item>\n    ));\n\n    return (\n      <Container>\n        {children ? children(renderedItems) : renderedItems}\n      </Container>\n    );\n  }\n}\n\nexport default ItemList;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from 'store';\nimport { Product } from 'model/product';\nimport ItemList from 'components/ItemList';\n\nconst mapStateToProps = ({ product: { products } }: RootState) => ({\n  products,\n});\n\ntype Props = {} & ReturnType<typeof mapStateToProps>;\n\nclass ProductList extends React.Component<Props> {\n  renderItem = (item: Product) => {\n    return (\n      <>\n        <span>{item.id}</span>\n        <span> - </span>\n        <span>{item.name}</span>\n      </>\n    );\n  };\n\n  render() {\n    const { products } = this.props;\n    return (\n      <ItemList items={products} renderItem={this.renderItem}>\n        {items => (\n          <>\n            <span>Produtos...</span>\n            {items}\n          </>\n        )}\n      </ItemList>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(ProductList);\n","import styled from 'styles';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  background: teal;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkActionDispatch } from 'redux-thunk';\nimport { RouteComponentProps } from 'react-router';\n\nimport { RootState } from 'store';\nimport { ProductAsyncActions } from 'store/product';\n\nimport StyledButton from 'components/StyledButton';\nimport ProductList from 'components/ProductList';\n\nimport { Container } from './styled';\n\nconst mapStateToProps = ({ product: { products } }: RootState) => ({\n  products,\n});\n\ntype Props = {\n  fetchProducts: ThunkActionDispatch<typeof ProductAsyncActions.fetchProducts>;\n} & RouteComponentProps\n& ReturnType<typeof mapStateToProps>;\n\nconst ProductsPage = ({history, fetchProducts}: Props) => (\n  <Container>\n    <h1>Product List</h1>\n    <ProductList />\n    <StyledButton onClick={fetchProducts} label=\"Fetch Products\" />\n    <StyledButton onClick={() => history.push('/home')} label=\"HOME\" />\n  </Container>\n);\n\nexport default connect(mapStateToProps, {\n  fetchProducts: ProductAsyncActions.fetchProducts,\n})(ProductsPage);\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createHashHistory } from 'history';\n\nimport MapRoute from './MapRoute';\nimport HomeRoute from './HomeRoute';\nimport ProductsRoute from './ProductsRoute';\n\nconst history = createHashHistory({ hashType: 'hashbang' });\n\nclass MainRoute extends React.Component {\n  render(): JSX.Element {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/map\" component={MapRoute} />\n          <Route path=\"/home\" component={HomeRoute} />\n          <Route path=\"/products\" component={ProductsRoute} />\n          <Route path=\"/\" component={MapRoute} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default MainRoute;\n","export default __webpack_public_path__ + \"static/media/bg-pattern.a4e6cf7d.svg\";","import styled from 'styles';\nimport background from 'resources/svg/bg-pattern.svg';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  /* background: #666c72; #252C37 */\n  /* background: linear-gradient(to top right, #4e598f, #32313a);\n  background: linear-gradient(to bottom, #474959, #333541);\n  background: linear-gradient(to top, #52535a, #2d2d31); */\n\n  background-image: url(${background}),\n    -webkit-radial-gradient(60% 0, farthest-side ellipse, #596276 10%, #2d313e);\n  background-size: cover;\n  background-attachment: fixed, fixed;\n  /* border: solid red; */\n  color: whitesmoke;\n`;\n","import React from 'react';\n\nimport MainRoute from 'routes';\n\nimport { Container } from './styled';\n\ntype Props = {};\n\nclass App extends React.Component<Props> {\n  render(): JSX.Element {\n    return (\n      <Container>\n        <MainRoute />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'emotion-theming';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport configureStore from 'store/configureStore';\nimport { theme } from 'styles';\n\nimport './index.css';\nimport App from 'App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst { store, persistor } = configureStore();\n\nconst render = (AppComponent: React.ComponentType) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <PersistGate loading={null} persistor={persistor}>\n          <AppComponent />\n        </PersistGate>\n      </ThemeProvider>\n    </Provider>,\n    document.getElementById('root') as HTMLElement,\n  );\n};\n\nrender(App);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}